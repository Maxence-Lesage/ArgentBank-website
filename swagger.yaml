swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: User Transactions
      description: API for getting user transactions
      produces:
        - application/json
      responses:
        '200':
          description: Successfully Fetching User Transactions
          schema:
            $ref: '#/definitions/TransactionsDataAll'
        '400':
          description: Bad Request
        '500':
          description: Internal Servor Error
  /user/transactions/id:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: User Transaction
      description: API for getting user transaction
      produces:
        - application/json
      responses:
        '200':
          description: Successfully Fetching User Transaction
          schema:
            $ref: '#/definitions/TransactionsDataId'
        '400':
          description: Bad Request
        '500':
          description: Internal Servor Error
  /user/transactions/id/category:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Transaction category update
      description: API for updating transaction's category
      parameters:
        - in: body
          name: body
          description: Update Category Attributes
          required: true
          schema:
            $ref: '#/definitions/CategoryUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully Updating Transaction Category
        '400':
          description: Bad Request
        '500':
          description: Internal Servor Error  
  /user/transactions/id/note:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Transaction notes update
      description: API for updating transaction's notes
      parameters:
        - in: body
          name: body
          description: Update Note Attributes
          required: true
          schema:
            $ref: '#/definitions/NoteUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully Updating Transaction Note
        '400':
          description: Bad Request
        '500':
          description: Internal Servor Error                  
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionsDataAll:
    type: object
    properties:
      transactionsId:
        type: object
        properties:
          data:
            type: object
  TransactionsDataId:
    type: object
    properties:
      data:
        type: object
  CategoryUpdate:
    type: object
    properties:
      category:
        type: string
  NoteUpdate:
    type: object
    properties:
      note:
        type: string

